name: Windows

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    name: "build: ${{ matrix.arch }} ${{ matrix.config }} ${{ matrix.link }}"
    strategy:
      fail-fast: false
      matrix:
        arch: [x64]
        config: [Release]
        link: [dll]

        include:
        - link: dll
          shlib: "ON"
    steps:
      - uses: actions/checkout@v3
        with:
          repository: rhasspy/espeak-ng
          path: espeak-ng
      - name: configure-espeak
        run: cd espeak-ng && cmake -Bbuild -DUSE_ASYNC:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shlib }} -A ${{ matrix.arch }} -DUSE_MBROLA:BOOL=OFF -DUSE_LIBSONIC:BOOL=OFF -DUSE_LIBPCAUDIO:BOOL=OFF -DUSE_KLATT:BOOL=OFF -DUSE_SPEECHPLAYER:BOOL=OFF -DEXTRA_cmn:BOOL=ON -DEXTRA_ru:BOOL=ON
      - name: make-espeak
        run: cd espeak-ng && cmake --build build --config ${{ matrix.config }}
      - name: install-espeak
        run: cd espeak-ng && cmake --install build --prefix "$PWD"
      - uses: actions/checkout@v3
        with:
          path: piper-phonemize
      - name: prepare-onnxruntime
        run: curl -L -o onnxruntime.zip 'https://github.com/microsoft/onnxruntime/releases/download/v1.14.1/onnxruntime-win-x64-1.14.1.zip' && unzip onnxruntime.zip && mkdir -p piper-phonemize\lib\Windows-x86_64 && mv onnxruntime-* piper-phonemize\lib\Windows-x86_64\onnxruntime
      - name: configure-piper
        env:
          PKG_CONFIG_PATH: "$PWD\\espeak-ng\\lib\\pkgconfig"
        run: cd piper-phonemize && cmake -Bbuild
      - name: make-piper
        run: cd piper-phonemize && cmake --build build --config ${{ matrix.config }}
